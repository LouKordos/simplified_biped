FROM ubuntu:20.04

ENV DEBIAN_FRONTEND=noninteractive TZ=Europe/Berlin
RUN apt-get update -y && apt-get upgrade -y && apt-get install --no-install-recommends -y build-essential pkg-config git cmake python3 python3-pip software-properties-common curl dirmngr gnupg-agen

# Install fmtlib

WORKDIR /tmp
RUN git clone https://github.com/fmtlib/fmt
WORKDIR /tmp/fmt
RUN mkdir build
WORKDIR /tmp/fmt/build
RUN cmake ..
RUN make -j
RUN make test
RUN make install

# # Install Ignition CMake 2 (Docs do not specify desired version for gazebo 11 so latest is used)

# RUN git clone https://github.com/ignitionrobotics/ign-cmake /tmp/ign-cmake
# WORKDIR /tmp/ign-cmake
# # Latest ign-cmake-2 commit hash at time of writing Dockerfile
# RUN git checkout 3b7870289027ae0fc04c83d5817907ed863a0720
# RUN mkdir build
# WORKDIR /tmp/ign-cmake/build
# RUN cmake ../
# RUN make -j$(awk '( $1 == "MemTotal:" ) { printf "%d", $2/2/1000000 }' /proc/meminfo)
# RUN make install

# # Gazebo 11 needs Igntion Math 6

# RUN git clone https://github.com/ignitionrobotics/ign-math /tmp/ign-math
# WORKDIR /tmp/ign-math
# # Latest ign-math-6 commit hash at time of writing Dockerfile
# RUN git checkout 9519ce74dae8b8c68303ef81e85fda27d9f4f494
# RUN mkdir build
# WORKDIR /tmp/ign-math/build
# RUN cmake ../
# RUN make -j$(awk '( $1 == "MemTotal:" ) { printf "%d", $2/2/1000000 }' /proc/meminfo)
# RUN make install

# # Gazebo 11 needs Ignition Utils 1

# RUN git clone https://github.com/ignitionrobotics/ign-utils.git /tmp/ign-utils
# WORKDIR /tmp/ign-utils
# # Latest ign-utils-1 commit hash at time of writing Dockerfile
# RUN git checkout 8222e994f11b118c08afac61a6b0a3084fb08032
# RUN mkdir build
# WORKDIR /tmp/ign-utils/build
# RUN cmake ../
# RUN make -j$(awk '( $1 == "MemTotal:" ) { printf "%d", $2/2/1000000 }' /proc/meminfo)
# RUN make install

# # Gazebo 11 needs Ignition Common 3

# RUN apt-get install --no-install-recommends -y build-essential \
#                      cmake \
#          libfreeimage-dev \
#          libtinyxml2-dev \
#          uuid-dev \
#          libgts-dev \
#          libavdevice-dev \
#          libavformat-dev \
#          libavcodec-dev \
#          libswscale-dev \
#          libavutil-dev \
#          libprotoc-dev \
#              libprotobuf-dev
# # # libgts
# # RUN git clone https://github.com/LouKordos/libgts.git /tmp/libgts
# # WORKDIR /tmp/libgts
# # RUN ./configure
# # RUN make -j$(awk '( $1 == "MemTotal:" ) { printf "%d", $2/2/1000000 }' /proc/meminfo)
# # RUN make install

# RUN git clone https://github.com/ignitionrobotics/ign-common /tmp/ign-common
# WORKDIR /tmp/ign-common
# # Latest ign-common-3 commit hash at time of writing Dockerfile
# RUN git checkout 153f3209e8bfbe362785471e1a26d478c28ee3ea
# RUN mkdir build
# WORKDIR /tmp/ign-common/build
# # Patch include error for file descriptor calls due to compiling on alpine
# RUN sed -i '1i #include <sys/select.h>' /tmp/ign-common/profiler/src/Remotery/lib/Remotery.c
# RUN cmake  ../
# RUN make -j$(awk '( $1 == "MemTotal:" ) { printf "%d", $2/2/1000000 }' /proc/meminfo)
# RUN make install

# # SDF9 needs ign-tools-1

# # Deps
# RUN apt-get install --no-install-recommends -y build-essential \
#                      cmake \
#                      git \
#                      python \
#                      libboost-system-dev \
#                      libtinyxml-dev \
#                      libxml2-utils \
#                      ruby-dev \
#                      ruby

# RUN git clone https://github.com/ignitionrobotics/ign-tools.git /tmp/ign-tools
# WORKDIR /tmp/ign-tools
# # Latest ign-tools-1 commit hash at time of writing Dockerfile
# RUN git checkout 2cca470de7a62327beeb1065209c8ffd7a303d29
# RUN mkdir build
# WORKDIR /tmp/ign-tools/build
# RUN cmake ../
# RUN make -j$(awk '( $1 == "MemTotal:" ) { printf "%d", $2/2/1000000 }' /proc/meminfo)
# RUN make install

# # Gazebo 11 needs SDF 9

# RUN git clone https://github.com/osrf/sdformat /tmp/sdformat
# WORKDIR /tmp/sdformat
# # Latest sdf9 commit hash at time of writing Dockerfile
# RUN git checkout 9876a6089c88ac39408e658b6b4b2928abab8377
# RUN mkdir build
# WORKDIR /tmp/sdformat/build
# RUN cmake ../
# RUN make -j$(awk '( $1 == "MemTotal:" ) { printf "%d", $2/2/1000000 }' /proc/meminfo)
# RUN make install

# # Gazebo 11 needs Ingition Messages 5

# RUN apt-get install --no-install-recommends -y build-essential \
#                      cmake \
#                      git \
#                      libprotoc-dev \
#                      libprotobuf-dev \
#                      protobuf-compiler

# RUN git clone https://github.com/ignitionrobotics/ign-msgs /tmp/ign-msgs
# WORKDIR /tmp/ign-msgs
# # Latest ign-msgs-5 commit hash at time of writing Dockerfile
# RUN git checkout c7b64782a0b046ec108d2e2cb2cb0ee13e8dff21

# #ifdef major
# #undef major
# #endif
# #ifdef minor
# #undef minor
# #endif

# RUN mkdir build
# WORKDIR /tmp/ign-msgs/build
# RUN cmake ../
# RUN make -j$(awk '( $1 == "MemTotal:" ) { printf "%d", $2/2/1000000 }' /proc/meminfo)
# RUN make install

# # Gazebo 11 needs Ignition Fuel Tools 4

# # Deps
# RUN apt-get install --no-install-recommends -y build-essential \
#                         cmake \
#                         libzip-dev \
#                         libjsoncpp-dev \
#                         libcurl4-openssl-dev \
#                         libyaml-dev

# RUN git clone https://github.com/ignitionrobotics/ign-fuel-tools /tmp/ign-fuel-tools
# WORKDIR /tmp/ign-fuel-tools
# # Latest ign-fuel-tools-4 commit hash at time of writing Dockerfile
# RUN git checkout 3db16a144929df89d70a683a4dc5b664cdfbc706
# RUN mkdir build
# WORKDIR /tmp/ign-fuel-tools/build
# RUN cmake ../
# RUN make -j$(awk '( $1 == "MemTotal:" ) { printf "%d", $2/2/1000000 }' /proc/meminfo)
# RUN make install


# # Gazebo 11 needs Ignition Transport 8

# # Deps
# RUN apt-get install --no-install-recommends -y uuid-dev libzmq3-dev lsb-release

# RUN git clone https://github.com/ignitionrobotics/ign-transport /tmp/ign-transport
# WORKDIR /tmp/ign-transport
# RUN git checkout 5d88091eb5eb1c65a0faa37969b1cde9ce943c85
# RUN mkdir build
# WORKDIR /tmp/ign-transport/build
# RUN cmake ../
# RUN make -j$(awk '( $1 == "MemTotal:" ) { printf "%d", $2/2/1000000 }' /proc/meminfo)
# RUN make install

# # Main repository
# RUN add-apt-repository -y ppa:dartsim
# RUN apt-get update -y
# RUN apt-get install -y libdart6-dev --no-install-recommends

# # Optional DART utilities
# RUN apt-get install --no-install-recommends -y libdart6-utils-urdf-dev qtbase5-dev qt5-default libqt5opengl5-dev libsimbody-dev libtar-dev libqwt-qt5-dev libogre-1.9-dev ogre-1.9-tools libtbb-dev libgles2-mesa-dev libxt-dev libxaw7-dev

# RUN git clone https://github.com/osrf/gazebo /tmp/gazebo
# WORKDIR /tmp/gazebo
# RUN git checkout c09a427cc6432de3a2cf761f09f25fb16dd0b0ae
# RUN mkdir build
# WORKDIR /tmp/gazebo/build
# RUN cmake ../
# RUN make -j$(awk '( $1 == "MemTotal:" ) { printf "%d", $2/2/1000000 }' /proc/meminfo)
# RUN make install
# RUN ldconfig

RUN curl -sSL http://get.gazebosim.org | sh

# Clear dependency source files
RUN rm -rf /tmp/*
RUN  rm -rf /var/lib/apt/lists/*
# Delete example plugins
RUN rm -f /usr/local/lib/gazebo-11/plugins/*